launch_app()
library(RnBeadsInterface)
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
nchar("this is a string")
c <- nchar("this is a string")
library(RnBeadsInterface)
launch_app()
c <- "this is a string"
c
c <- nchar(c)
c <- "this is a string"
l <- nchar(c)
l
c[l - 1]
c[1]
c <- toString("this is a string")
c
l <- nchar(c)
c[1]
str_sub(c,-6,-1)
result = substr(c,(nchar(c)+1)-n,nchar(c))
result = substr(c,(nchar(c)+1)- l,nchar(c))
result
result = substr(c,(l,6))
result = substr(c,(l+1)- l,l)
result
result = substr(c,(l+1)- l,4)
result
result = substr(c,1,4)
result
result = substr(c,l,l - 1)
result
result = substr(c,l,l - 3)
result
result = substr(c,l,l - 5)
result
result = substr(c,l,2)
result
l
result = substr(c,4,l)
result
result = substr(c,15,l)
result
result = substr(c,l,l)
result
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
result = substr(c,l,l)
result
result = substr(c,1,l - 2)
result
result = substr(c,1,l - 1)
result
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
tmp <- file.path(getwd(), paste('results','mesangial cell','differential_methylation.html'),sep='/')
filename= as.character(tmp)
filename
tmp <- file.path(getwd(), paste('results','mesangial cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
tmp <- file.path(getwd(), paste('applications','results','mesangial cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
differential.methylation.path <- filename
webpage <- readLines(tc <- textConnection(differential.methylation.path)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
# Extract table header and contents of the analysis option table of differential methylation
tablehead <- xpathSApply(pagetree, "//*/table[@class='tindex']/thead/tr/th", xmlValue)
results <- xpathSApply(pagetree, "//*/table[@class='tindex']/tbody/tr/td", xmlValue)
# Convert character vector to dataframe
content <- as.data.frame(matrix(results, ncol =2, byrow = TRUE))
# Clean up the results
content[,1] <- gsub("Â ", "", content[,1])
tablehead <- gsub("Â ", "", tablehead)
names(content) <- tablehead
content
tablehead
tmp <- file.path(getwd(), paste('applications','results','mesangial cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
differential.methylation.path <- filename
webpage
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
pagetree
head <- xpathSApply(pagetree, "//*/table[@class='tabdata']/tr/td[@class='header']", xmlValue)
results <- xpathSApply(pagetree, "//*/table[@class='tabdata']/tr/td", xmlValue)
# Convert character vector to dataframe
comparisonTable <- as.data.frame(matrix(results, ncol = 4, byrow = TRUE))
tablehead <- c('Nr.','comparison','ajustment','covariateTable')
# Clean up the results
comparisonTable[,1] <- gsub("Â ", "", comparisonTable[,1])
comparisonTable
comparisonTable[,1] <- gsub("Â ", "", comparisonTable[,1])
tablehead <- gsub("Â ", "", tablehead)
names(comparisonTable) <- tablehead
comparisonTable
comparisonTable <- as.data.frame(matrix(results, ncol = 4, byrow = TRUE))
comparisonTable
tmp <- file.path(getwd(), paste('applications','results','mesangial cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
tmp <- file.path(getwd(), paste('application','results','mesangial cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
differential.methylation.path <- filename
webpage <- readLines(tc <- textConnection(differential.methylation.path)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
pagetree
head <- xpathSApply(pagetree, "//*/table[@class='tabdata']/tr/td[@class='header']", xmlValue)
results <- xpathSApply(pagetree, "//*/table[@class='tabdata']/tr/td", xmlValue)
results
comparisonTable <- as.data.frame(matrix(results, ncol = 4, byrow = TRUE))
comparisonTable
results
head <- xpathSApply(pagetree, "//*/table[@class='tabdata']/tr/td[@class='header']", xmlValue)
head
query = "//tr[./td[@class='tabdata'] and ./td[@class='header']]/td[1]"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//tr[./td[@class='tabdata']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
df <- readHTMLTable(filename, stringAsFactors = FALSE, which = 8)
df[4:18,]
df
df <- readHTMLTable(filename)
df
df <- readHTMLTable(filename, stringAsFactors = FALSE, which = 2)
df
df <- as.data.frame(matrix(df, ncol = 4, byrow = TRUE))
df
df <- readHTMLTable(filename, stringAsFactors = FALSE, which = 2)
df
df <- as.data.frame(matrix(df, byrow = TRUE))
df
df <- as.data.frame((df))
df
df <- readHTMLTable(filename, stringAsFactors = FALSE, which = 2)
df
df <- as.data.frame((df))
df
df <- readHTMLTable(filename, stringAsFactors = FALSE, which = 2)
df
df <- matrix(df, byrow = TRUE)
df
df <- readHTMLTable(filename, stringAsFactors = FALSE, which = 4)
df
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query <- '//*[contains(@class, "header")]/td[10]/span/@class'
dates = xpathSApply(pagetree, query, xmlValue)
dates
query <- '//*[contains(@class, "header")]/td'
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "///table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "/table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
dates[1]
dates
query = "//table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
dates <- as.data.frame(matrix(dates, ncol = 4, byrow = TRUE))
dates
query = "//table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "/table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "div"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//div"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//table"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//@tabdata"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//./table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
for (i in 1:length(dates)) {
if (i/5 == 0){
print (i)
}
}
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if (i/5 == 0){
comp_names[comp_names_counter] = dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names
comp_names[1]
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if (i/5 == 0){
dates = dates[i]
comp_names[comp_names_counter] = dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names[1]
dates
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
dates = dates[i]
if (i/5 == 0){
dates = dates[i]
comp_names[comp_names_counter] = dates[i]
comp_names_counter = comp_names_counter + 1
}
}
dates
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates[2]
dates[21]
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates[21]
dates = xpathSApply(pagetree, query, xmlValue)
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if ((i/5) == 0){
dates = dates[i]
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names[1]
comp_names
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates[21]
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
#if ((i/5) == 0){
dates = dates[i]
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
#}
}
comp_names
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates[21]
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
#if ((i/5) == 0){
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
#}
}
comp_names
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates[21]
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if ((i/5) == 0){
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates[21]
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if ((i/5 == 0) == TRUE){
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates[21]
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if ((i%%5) == 0){
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names
dates
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if ((i>5)){
if(dates[i] == ""){
break
}
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names
library(RnBeadsInterface)
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
launch_app()
library(RnBeadsInterface)
launch_app()
launch_app()
library(RnBeadsInterface)
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
library(RnBeadsInterface)
launch_app()
launch_app()
launch_app()
launch_app()
launch_app()
tmp <- file.path(getwd(), paste('application','results','embryonic stem cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
differential.methylation.path <- filename
webpage <- readLines(tc <- textConnection(differential.methylation.path)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
pagetree
# Extract table header and contents of the comparison table of differential methylation
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
comp_names <- list()
comp_names_counter <- 1
for (i in 1:length(dates)) {
if ((i>5)){
if(dates[i] == ""){
break
}
comp_names[comp_names_counter] <- dates[i]
comp_names_counter = comp_names_counter + 1
}
}
comp_names
tmp <- file.path(getwd(), paste('application','results','embryonic stem cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
differential.methylation.path <- filename
webpage <- readLines(tc <- textConnection(differential.methylation.path)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
pagetree
# Extract table header and contents of the comparison table of differential methylation
query = "//*/table[@class='tabdata']/tr/td[@class='header']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
tmp <- file.path(getwd(), paste('application','results','embryonic stem cell','differential_methylation.html',sep='/'))
# #removing space
# tmp <- gsub(" /", "/", tmp)
filename= as.character(tmp)
filename
differential.methylation.path <- filename
webpage <- readLines(tc <- textConnection(differential.methylation.path)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
pagetree
# Extract table header and contents of the comparison table of differential methylation
query = "//*/div[@class='section3']/ul/li']"
dates = xpathSApply(pagetree, query, xmlValue)
dates
query = "//*/div[@id='section3']/ul/li']"
dates = xpathSApply(pagetree, query, xmlValue)
query = "//*/div[@id='section3']']"
dates = xpathSApply(pagetree, query, xmlValue)
query = "/div[@id='section3']']"
dates = xpathSApply(pagetree, query, xmlValue)
query = "//*/div[@id='section3']/ul/li"
dates = xpathSApply(pagetree, query, xmlValue)
dates
library(RnBeadsInterface)
launch_app()
library(RnBeadsInterface)
launch_app()
